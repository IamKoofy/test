# ============================================
#  APAC-ABM-EmailOffers – CI Build Pipeline
# ============================================

trigger: none          # manual / scheduled only
pr: none

# -------- Global variables ------------------
variables:
  BuildParameters.ArtifactName: drop
  BuildPlatform: 'Any CPU'
  BuildConfiguration: Release
  # Build.BuildId keeps Azure-DevOps autogenerated value.
  # If you really need a custom ID, use a new variable (e.g. CustomBuildId).

# -------- External variable groups ----------
# Holds tokens, endpoints, etc.
variableGroups:
- GithubPAT           # <-- correct spelling

# -------- External repository ---------------
resources:
  repositories:
  - repository: appSrc          # alias used in checkout step
    type: github
    endpoint: github-abm-emailoffers   # service connection name
    name: AEGBT/gbt-apac-ABM.EmailOffers
    ref: dev                        # default branch; can be overridden at queue time

# ============ BUILD JOB =====================
jobs:
- job: Build
  displayName: Build & Analyse
  pool:
    name: main-build-pool

  variables:
    System.Debug: true

  steps:

  # --- Checkout the GitHub repo with PAT/token automatically ---
  - checkout: appSrc
    fetchDepth: 0                   # full history for Sonar branch analysis

  # -------- SonarQube: Prepare ---------------
  - task: SonarQubePrepare@5
    displayName: Prepare SonarQube Analysis
    inputs:
      SonarQube: 3c7512f3-eb4b-41d5-918c-a632d362014d
      projectKey: gbtapac-emailoffers-prod
      projectName: gbtapac-emailoffers-prod
      extraProperties: |
        sonar.projectBaseDir=$(Build.SourcesDirectory)   # repo root

  # -------- NuGet restore --------------------
  - task: NuGetToolInstaller@1
    inputs:
      versionSpec: '>=6.6.1'

  - task: NuGetCommand@2
    displayName: Restore NuGet packages
    inputs:
      restoreSolution: '**/ABM.EmailOffers.sln'
      nugetConfigPath: 'nuget.config'
      externalEndpoints: 9d6b3432-5c32-4a0e-8620-9a06ff19f0d8

  # -------- Build ----------------------------
  - task: VSBuild@1
    displayName: Build solution
    inputs:
      solution: '**/ABM.EmailOffers.sln'
      msbuildArgs: >
        /p:DeployOnBuild=true
        /p:WebPublishMethod=Package
        /p:PackageAsSingleFile=true
        /p:SkipInvalidConfigurations=true
        /p:PackageLocation="$(Build.ArtifactStagingDirectory)\"
      platform: $(BuildPlatform)
      configuration: $(BuildConfiguration)

  # -------- Test platform + tests ------------
  - task: VisualStudioTestPlatformInstaller@1
    inputs:
      versionSelector: specificVersion
      testPlatformVersion: '>=6.6.1'

  - task: VSTest@2
    displayName: Run Unit Tests
    inputs:
      testSelector: testAssemblies
      testAssemblyVer2: |
        **\bin\$(BuildConfiguration)\**\*test*.dll
        !**\obj\**
        !**\ref\**
      runSettingsFile: 'EmailOfferUnittest.runsettings'
      codeCoverageEnabled: true
      vsTestVersion: toolsInstaller

  # -------- Publish test results -------------
  - task: PublishTestResults@2
    displayName: Publish Test Results
    inputs:
      testResultsFiles: '**/TestResults/*.trx'
      testRunner: VSTest
      mergeTestResults: true
      failTaskOnFailedTests: true

  # -------- SonarQube analyse & publish ------
  - task: SonarQubeAnalyze@5
    displayName: SonarQube – Run Analysis

  - task: SonarQubePublish@5
    displayName: SonarQube – Quality Gate
    inputs:
      pollingTimeoutSec: '300'
    # continueOnError: true   # uncomment if you want soft-fail

  # -------- Nexus IQ policy evaluation -------
  - task: NexusIqPipelineTask@1
    displayName: Nexus IQ – Policy Evaluation
    continueOnError: true
    inputs:
      nexusIqService: e80e497e-f9fd-4dd0-bf06-53020dfcb9e3
      organizationId: e2d8254992b344f79a5ad89bce5e7e71
      applicationId: ABM.EMailOffers
      stage: Release
      scanTargets: |
        $(Build.ArtifactStagingDirectory)/**/*.dll
        $(Build.ArtifactStagingDirectory)/**/*.exe
        $(Build.ArtifactStagingDirectory)/**/*.nupkg

  # -------- Publish build artifact -----------
  - task: PublishBuildArtifacts@1
    displayName: Publish Artifact: $(BuildParameters.ArtifactName)
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: '$(BuildParameters.ArtifactName)'
